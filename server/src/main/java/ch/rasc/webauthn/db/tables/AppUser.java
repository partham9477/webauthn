/*
 * This file is generated by jOOQ.
 */
package ch.rasc.webauthn.db.tables;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ch.rasc.webauthn.db.Indexes;
import ch.rasc.webauthn.db.Keys;
import ch.rasc.webauthn.db.Webauthn;
import ch.rasc.webauthn.db.tables.records.AppUserRecord;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.11.11" },
    comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUser extends TableImpl<AppUserRecord> {

  private static final long serialVersionUID = 2050256806;

  /**
   * The reference instance of <code>webauthn.app_user</code>
   */
  public static final AppUser APP_USER = new AppUser();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<AppUserRecord> getRecordType() {
    return AppUserRecord.class;
  }

  /**
   * The column <code>webauthn.app_user.id</code>.
   */
  public final TableField<AppUserRecord, Long> ID = createField("id",
      org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

  /**
   * The column <code>webauthn.app_user.username</code>.
   */
  public final TableField<AppUserRecord, String> USERNAME = createField("username",
      org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

  /**
   * The column <code>webauthn.app_user.recovery_token</code>.
   */
  public final TableField<AppUserRecord, byte[]> RECOVERY_TOKEN = createField(
      "recovery_token", org.jooq.impl.SQLDataType.BINARY(16).defaultValue(
          org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BINARY)),
      this, "");

  /**
   * The column <code>webauthn.app_user.registration_start</code>.
   */
  public final TableField<AppUserRecord, LocalDateTime> REGISTRATION_START = createField(
      "registration_start",
      org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(
          org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)),
      this, "");

  /**
   * The column <code>webauthn.app_user.registration_add_start</code>.
   */
  public final TableField<AppUserRecord, LocalDateTime> REGISTRATION_ADD_START = createField(
      "registration_add_start",
      org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(
          org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)),
      this, "");

  /**
   * The column <code>webauthn.app_user.registration_add_token</code>.
   */
  public final TableField<AppUserRecord, byte[]> REGISTRATION_ADD_TOKEN = createField(
      "registration_add_token", org.jooq.impl.SQLDataType.BINARY(16).defaultValue(
          org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BINARY)),
      this, "");

  /**
   * Create a <code>webauthn.app_user</code> table reference
   */
  public AppUser() {
    this(DSL.name("app_user"), null);
  }

  /**
   * Create an aliased <code>webauthn.app_user</code> table reference
   */
  public AppUser(String alias) {
    this(DSL.name(alias), APP_USER);
  }

  /**
   * Create an aliased <code>webauthn.app_user</code> table reference
   */
  public AppUser(Name alias) {
    this(alias, APP_USER);
  }

  private AppUser(Name alias, Table<AppUserRecord> aliased) {
    this(alias, aliased, null);
  }

  private AppUser(Name alias, Table<AppUserRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""));
  }

  public <O extends Record> AppUser(Table<O> child, ForeignKey<O, AppUserRecord> key) {
    super(child, key, APP_USER);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Schema getSchema() {
    return Webauthn.WEBAUTHN;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(Indexes.APP_USER_PRIMARY, Indexes.APP_USER_USERNAME);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Identity<AppUserRecord, Long> getIdentity() {
    return Keys.IDENTITY_APP_USER;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public UniqueKey<AppUserRecord> getPrimaryKey() {
    return Keys.KEY_APP_USER_PRIMARY;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public List<UniqueKey<AppUserRecord>> getKeys() {
    return Arrays.<UniqueKey<AppUserRecord>>asList(Keys.KEY_APP_USER_PRIMARY,
        Keys.KEY_APP_USER_USERNAME);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public AppUser as(String alias) {
    return new AppUser(DSL.name(alias), this);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public AppUser as(Name alias) {
    return new AppUser(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public AppUser rename(String name) {
    return new AppUser(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public AppUser rename(Name name) {
    return new AppUser(name, null);
  }
}
